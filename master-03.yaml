AWSTemplateFormatVersion: "2010-09-09"
Description: > 
  plantilla CF para actividad 03

Parameters:

  EnvironmentName:
    Description:  enviroment
    Type: String
    Default: threepoints

  VpcCIDR:
    Description: Ip de vpc
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: CIDR de subnet publica
    Type: String
    Default: 10.0.0.0/24

  PrivateSubnet1CIDR:
    Description: CIDR de subnet privada
    Type: String
    Default: 10.0.2.0/23

  keyName:
    Description: nombre de llave
    Type: String
    Default: myKey


Resources:

  VPC:
    Description: "VPC"
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName


  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MySecurityGroup
      GroupDescription: Security group for my EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  InternetGateway:
    Description: "InternetGateway"
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Description: "InternetGatewayAttachment"
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Description: "PublicSubnet"
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)


  PrivateSubnet:
    Description: "PrivateSubnet"
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  NatGateway1EIP:
    Description: "NatGateway1EIP"
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Description: "NatGateway1"
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PublicRouteTable:
    Description: "PublicRouteTable"
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Description: "DefaultPublicRoute"
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Description: "PublicSubnet1RouteTableAssociation"
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable1:
    Description: "PrivateRouteTable1"
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  PrivateSubnet1RouteTableAssociation:
    Description: "PrivateSubnet1RouteTableAssociation"
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Ref keyName

  ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref SecurityGroup
      ImageId: ami-0b5eea76982371e91
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum -y install httpd php mysql php-mysql
          
          case $(ps -p 1 -o comm | tail -1) in
          systemd) systemctl enable --now httpd ;;
          init) chkconfig httpd on; service httpd start ;;
          *) echo "Error starting httpd (OS not using init or systemd)." 2>&1
          esac
          
          if [ ! -f /var/www/html/bootcamp-app.tar.gz ]; then
          cd /var/www/html
          wget https://s3.amazonaws.com/immersionday-labs/bootcamp-app.tar
          tar xvf bootcamp-app.tar
          chown apache:root /var/www/html/rds.conf.php
          fi
          yum -y update






